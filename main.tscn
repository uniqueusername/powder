[gd_scene load_steps=8 format=3 uid="uid://djgte3irf4hdr"]

[ext_resource type="Texture2D" uid="uid://cgxbkoa7boess" path="res://icon.svg" id="1_8cak0"]
[ext_resource type="Texture2D" uid="uid://bis17hfc2u54e" path="res://sand.png" id="2_8328s"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_6iujj"]
texture = ExtResource("1_8cak0")
texture_region_size = Vector2i(128, 128)
0:0/0 = 0
0:0/0/modulate = Color(0, 0, 0, 1)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_0lqwd"]
texture = ExtResource("2_8328s")
texture_region_size = Vector2i(128, 128)
0:0/0 = 0

[sub_resource type="TileSet" id="TileSet_kudxj"]
sources/0 = SubResource("TileSetAtlasSource_6iujj")
sources/1 = SubResource("TileSetAtlasSource_0lqwd")

[sub_resource type="GDScript" id="GDScript_jog2h"]
script/source = "extends TileMap

const TILE_SIZE: int = 128
const PARTICLE_SCALE: float = 0.1
@onready var cam = $Camera2D
var width_in_tiles: int
var height_in_tiles: int

class Particle:
	var position: Vector2i = Vector2i(0, 0)
	var velocity: Vector2 = Vector2(0, 0)
	var fixed: bool = false
	var moving: bool = false
	
var particles = []
var rigid: bool = false

signal toggle_rigid

func _ready():
	add_layer(1)
	set_layer_modulate(1, Color.RED)
	set_layer_z_index(1, -1)
	tile_set.tile_size = Vector2(TILE_SIZE, TILE_SIZE)
	scale = Vector2(PARTICLE_SCALE, PARTICLE_SCALE)
	
	var viewport_size: Vector2 = get_tree().root.get_visible_rect().size / PARTICLE_SCALE
	width_in_tiles = ceil(viewport_size.x / TILE_SIZE)
	height_in_tiles = ceil(viewport_size.y / TILE_SIZE)
	cam.position = Vector2(width_in_tiles, height_in_tiles) * TILE_SIZE / 2
	
	for x in range(width_in_tiles):
		var particle = Particle.new()
		particle.position = Vector2i(x, -1)
		particle.fixed = true
		particles.append(particle)
		set_cell(0, particle.position, 1, Vector2.ZERO)
		
		for y in range(height_in_tiles):
			set_cell(0, Vector2i(x, y), 0, Vector2.ZERO)

func _physics_process(delta):
	if Input.is_action_pressed(\"left_click\"):
		var mouse_center_tile: Vector2i = (get_viewport().get_mouse_position() / PARTICLE_SCALE / TILE_SIZE).floor()
		
		var brush_size: int = 2
		for i in range(-brush_size, brush_size):
			for j in range(-brush_size, brush_size):
				var mouse_tile: Vector2i = mouse_center_tile + Vector2i(i, j)
				if rigid:
					if get_cell_source_id(0, mouse_tile) == 0:
						set_cell(0, mouse_tile, 1, Vector2.ZERO)
						var particle = Particle.new()
						particle.position = mouse_tile
						particle.fixed = true
						particles.append(particle)
				else:
					if get_cell_source_id(0, mouse_tile) == 0:
						set_cell(0, mouse_tile, 1, Vector2.ZERO)
						set_cell(1, mouse_tile, 1, Vector2.ZERO)
						var particle = Particle.new()
						particle.position = mouse_tile
						particle.moving = true
						particles.append(particle)
			
	for particle in particles:
		if !particle.fixed:
			set_cell(0, particle.position, 0, Vector2.ZERO)
			set_cell(1, particle.position, 0, Vector2.ZERO)
			particle.velocity += Vector2(0, 9.8) * delta
			apply_particle_velocity(particle)
			set_cell(0, particle.position, 1, Vector2.ZERO)
			set_cell(1, particle.position, particle.moving, Vector2.ZERO)

func _input(event):
	if event.is_action_pressed(\"ui_cancel\"):
		get_tree().quit()
		
	if event.is_action_pressed(\"toggle_rigid\"):
		rigid = !rigid
		toggle_rigid.emit(rigid)
		
	if event.is_action_pressed(\"reset\"):
		get_tree().reload_current_scene()

func apply_particle_velocity(particle: Particle):
	if particle.velocity.length() < 1:
		particle.moving = false
		return
	var velocity_normalized: Vector2 = particle.velocity.normalized()
	var target: Vector2 = Vector2(particle.position)
	var collided: bool = false
	while target < Vector2(particle.position + Vector2i(particle.velocity.floor())):
		if particle.velocity.y > 0: # going down
			var target_: Vector2i = Vector2i(target.floor()) + Vector2i(0, 1)
			if target_.y >= height_in_tiles or get_cell_source_id(0, target_) == 1:
				if target_.y < height_in_tiles and get_cell_source_id(1, target_) == 1: break
				var left_gap = get_cell_source_id(0, target_ + Vector2i(-1, 0)) == 0
				var right_gap = get_cell_source_id(0, target_ + Vector2i(1, 0)) == 0
				if left_gap and right_gap: particle.position.x += randi_range(0, 1) * 2 - 1
				elif left_gap: particle.position.x -= 1
				elif right_gap: particle.position.x += 1
				particle.position.y = floor(target.y)
				particle.velocity.y = 0
				collided = true
		elif particle.velocity.y < 0:
			var target_: Vector2i = Vector2i(target.floor()) + Vector2i(0, -1)
			if target_.y < 0 or get_cell_source_id(0, target_) == 1:
				particle.position.y = floor(target.y)
				particle.velocity.y = 0
				collided = true
		if particle.velocity.x > 0: # going right
			var target_: Vector2i = Vector2i(target.floor()) + Vector2i(1, 0)
			if target_.x >= width_in_tiles or get_cell_source_id(0, target_) == 1:
				particle.position.x = floor(target.x)
				particle.velocity.x = 0
				collided = true
		elif particle.velocity.x < 0:
			var target_: Vector2i = Vector2i(target.floor()) + Vector2i(-1, 0)
			if target_.x < 0 or get_cell_source_id(0, target_) == 1:
				particle.position.x = floor(target.x)
				particle.velocity.x = 0
				collided = true
		if collided: break
		target += velocity_normalized
		
	if !collided:
		particle.position += Vector2i(particle.velocity.floor())
		
	particle.moving = particle.velocity != Vector2.ZERO
"

[sub_resource type="GDScript" id="GDScript_4fytx"]
script/source = "extends Label

func _on_tile_map_toggle_rigid(rigid: bool):
	if rigid: text = \"now drawing walls (space)\"
	else: text = \"now drawing sand (space)\"
"

[node name="TileMap" type="TileMap"]
tile_set = SubResource("TileSet_kudxj")
format = 2
script = SubResource("GDScript_jog2h")

[node name="Label" type="Label" parent="."]
offset_right = 40.0
offset_bottom = 23.0
theme_override_font_sizes/font_size = 512
text = "click to draw"

[node name="Label2" type="Label" parent="."]
offset_top = 495.0
offset_right = 6391.0
offset_bottom = 1193.0
theme_override_font_sizes/font_size = 512
text = "now drawing sand (space)"
script = SubResource("GDScript_4fytx")

[node name="Label3" type="Label" parent="."]
offset_left = 15.0
offset_top = 954.0
offset_right = 6406.0
offset_bottom = 1652.0
theme_override_font_sizes/font_size = 512
text = "press r to reset"

[node name="Camera2D" type="Camera2D" parent="."]

[connection signal="toggle_rigid" from="." to="Label2" method="_on_tile_map_toggle_rigid"]
