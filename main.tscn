[gd_scene load_steps=6 format=3 uid="uid://djgte3irf4hdr"]

[ext_resource type="Texture2D" uid="uid://cgxbkoa7boess" path="res://icon.svg" id="1_8cak0"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_6iujj"]
texture = ExtResource("1_8cak0")
texture_region_size = Vector2i(128, 128)
0:0/0 = 0
0:0/0/modulate = Color(0, 0, 0, 1)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_0lqwd"]
texture = ExtResource("1_8cak0")
texture_region_size = Vector2i(128, 128)
0:0/0 = 0

[sub_resource type="TileSet" id="TileSet_kudxj"]
sources/0 = SubResource("TileSetAtlasSource_6iujj")
sources/1 = SubResource("TileSetAtlasSource_0lqwd")

[sub_resource type="GDScript" id="GDScript_jog2h"]
script/source = "extends TileMap

const TILE_SIZE = 128
const PARTICLE_SCALE = 0.25

@onready var cam = $Camera2D

func _ready():
	tile_set.tile_size = Vector2(TILE_SIZE, TILE_SIZE)
	scale = Vector2(PARTICLE_SCALE, PARTICLE_SCALE)
	
	var viewport_size: Vector2 = get_tree().root.get_visible_rect().size / PARTICLE_SCALE
	var width_in_tiles = ceil(viewport_size.x / TILE_SIZE)
	var height_in_tiles = ceil(viewport_size.y / TILE_SIZE)
	cam.position = Vector2(width_in_tiles, height_in_tiles) * TILE_SIZE / 2
	
	for x in range(width_in_tiles):
		for y in range(height_in_tiles):
			set_cell(0, Vector2i(x, y), 0, Vector2(0, 0))

func _physics_process(delta):
	if Input.is_action_pressed(\"left_click\"):
		set_cell(0, (get_viewport().get_mouse_position() / PARTICLE_SCALE / TILE_SIZE).floor(), 1, Vector2(0, 0))

func _input(event):
	if event.is_action_pressed(\"ui_cancel\"):
		get_tree().quit()

func _process(delta):
	pass
"

[node name="TileMap" type="TileMap"]
tile_set = SubResource("TileSet_kudxj")
format = 2
script = SubResource("GDScript_jog2h")

[node name="Camera2D" type="Camera2D" parent="."]
